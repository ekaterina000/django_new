# Generated by Django 4.2.6 on 2023-12-12 17:27

import FirstProject.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Citie',
            fields=[
                ('name_city', models.CharField(blank=True, help_text='Введите название города', max_length=100, primary_key=True, serialize=False, verbose_name='Город')),
            ],
            options={
                'db_table': 'Citie',
            },
        ),
        migrations.CreateModel(
            name='Countrie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Введите название страны', max_length=100, verbose_name='Страна')),
                ('capital', models.CharField(blank=True, help_text='Введите столицу этой страны', max_length=50, null=True, verbose_name='Столица')),
            ],
            options={
                'db_table': 'Countrie',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Введите район города', max_length=100, verbose_name='Район')),
                ('population', FirstProject.models.IntegerRangeField(blank=True, help_text='Введите численность района', null=True, verbose_name='Численность населения района')),
            ],
            options={
                'db_table': 'District',
            },
        ),
        migrations.CreateModel(
            name='Resident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, help_text='Введите имя', max_length=50, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, help_text='Введите фамилию', max_length=50, null=True, verbose_name='Фамилия')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='images')),
                ('district', models.ForeignKey(blank=True, help_text='Введите район города', null=True, on_delete=django.db.models.deletion.CASCADE, to='FirstProject.district', verbose_name='Район города')),
                ('id_user', models.ForeignKey(blank=True, help_text='Выберите id жителя', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='id жителя')),
            ],
            options={
                'db_table': 'Resident',
            },
        ),
        migrations.CreateModel(
            name='Housing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', FirstProject.models.IntegerRangeField(blank=True, help_text='Введите площадь жилья', null=True, verbose_name='Площадь')),
                ('address', models.CharField(blank=True, help_text='Укажите адрес жилья', max_length=100, null=True, verbose_name='Адрес')),
                ('cost', FirstProject.models.IntegerRangeField(blank=True, help_text='Введите стоимость жилья', null=True, verbose_name='Стоимость')),
                ('city', models.ForeignKey(blank=True, help_text='Введите название города', null=True, on_delete=django.db.models.deletion.CASCADE, to='FirstProject.citie', verbose_name='Город')),
                ('resident', models.ForeignKey(blank=True, help_text='Введите имя и фамилию жителя', null=True, on_delete=django.db.models.deletion.CASCADE, to='FirstProject.resident', verbose_name='Житель')),
            ],
            options={
                'db_table': 'Housing',
            },
        ),
        migrations.CreateModel(
            name='Government',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, help_text='Введите имя', max_length=50, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, help_text='Введите фамилию', max_length=50, null=True, verbose_name='Фамилия')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='images')),
                ('country', models.ForeignKey(blank=True, help_text='Выберите страну представителя власти', null=True, on_delete=django.db.models.deletion.CASCADE, to='FirstProject.countrie', verbose_name='Страна')),
                ('id_user', models.ForeignKey(blank=True, help_text='Выберите id представителя', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='id представителя власти')),
            ],
            options={
                'db_table': 'Government',
            },
        ),
        migrations.AddField(
            model_name='citie',
            name='country',
            field=models.ForeignKey(blank=True, help_text='Введите название страны, в которой находится этот город', null=True, on_delete=django.db.models.deletion.CASCADE, to='FirstProject.countrie', verbose_name='Страна'),
        ),
        migrations.AddField(
            model_name='citie',
            name='districts',
            field=models.ManyToManyField(to='FirstProject.district'),
        ),
        migrations.AddField(
            model_name='citie',
            name='government',
            field=models.ForeignKey(blank=True, help_text='Выберите представителя власти', null=True, on_delete=django.db.models.deletion.CASCADE, to='FirstProject.government', verbose_name='Власть'),
        ),
    ]
